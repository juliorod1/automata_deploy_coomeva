#####WME Kyndryl Colombia Marzo/2023 - Autor: Julio Cesar Rodriguez Ibague, William Caicedo- Version: 1.0######

PROJECT_HOME="/ansible"
prog=1
clear
echo "			AUTOMATIZACION DESPLIEGUE APPLICACIONES COOMEVA"
echo "			==============================================="
echo

#######funcion para validar fecha y hora####
fecha()
{

read -p "Introduce la fecha y hora (YYYY-MM-DD HH:MI): " fecha_hora

# Validación del formato con grep
if ! echo "$fecha_hora" | grep -Eq "^[0-9]{4}-[0-9]{2}-[0-9]{2} [0-9]{2}:[0-9]{2}$"; then
    echo "Formato incorrecto. Usa YYYY-MM-DD HH:MM"
    return  1
fi

# Validación de la fecha y hora y conversión a segundos desde Epoch
fecha_hora_segundos=$(date -d "$fecha_hora" +%s 2>/dev/null)

if [[ $? -ne 0 ]]; then
    echo "Fecha y hora no válidas"
    return 1
fi

# Validación de fecha y hora futura
fecha_hora_actual_segundos=$(date +%s)

if [[ "$fecha_hora_segundos" -le "$fecha_hora_actual_segundos" ]]; then
    echo "La fecha y hora deben estar en el futuro"
    return 1
fi

echo "Fecha y hora válidas y en el futuro: $fecha_hora"
return 0
}
###############################

#funcion desplegar con ansible
deploy()
{
list_servers=$2
CR=$1
clear
for server in $list_servers; do
  clear
  echo
  echo ===PROGRAMANDO PARA EL SERVIDOR $server=====
  echo
  echo Recuperando listado de aplicaciones del servidor..... wait...
  echo Listado de Aplicaciones Disponibles en $server
  echo ======================================================================
  list_wars=""
  while [[ $list_wars == "" ]]; do
	  #set -x
	  #echo List del while es:$list_wars
	  echo Aun No ha selecionado aplicaciones..
	  sleep 2
  echo   "APLICACIONES DISPONIBLE PARA $server"
  opciones=(`cat Lista_aplicaciones/$server.txt|awk 'BEGIN{FS="/"} { print $6 }'` Continuar)
  PS3="                            Elige una opción: "
  select opt in "${opciones[@]}"
  do
     for i in "${opciones[($REPLY-1)]}"; do
       #echo el valor de REPLY es: $REPLY y "${opciones[($REPLY-1)]}"
      if [ $REPLY  ]; then
         #echo valor de REPLY es: $REPLY y de i es: $i
         if [ "$i" != "Continuar" ] && [ "$i" != "" ]; then
            #set -x
            #echo "REPLY es: $REPLY" y de i es $i:hola
            #app="$list_wars $i"
            list_wars=""$list_wars" "${opciones[($REPLY-1)]}""
            echo Aplicaciones selecionadas son:$list_wars
         else
            #echo Aplicaciones selecionadas son: $list_wars
	    if   [[ "$list_wars" == "" ]] && [ "$i" == "" ]; then
                 echo NO HA SELECCIONADO NINGUNA APLICACION!!!. DEBE SELECCIONAR  UNA OPCION VALIDA.
                 sleep 2
	    else
		   echo $i
		   if [ "$i" == "" ]; then
			   echo opcion Invalida!!
			   break
	            fi
		   #set x
		   #echo OK hay  app hay:$list_wars
		   break 2
            fi
            #break
         fi
      fi
     done #(for)
  done #(select)
  done #(while)
  clear
  echo   "APLICACIONES SELECCIONADAS  PARA $server:"
  echo contenido de apps es:$list_wars
  ###########
  echo
  echo Indique la Hora en la cual se ejecutará en el servidor $server esta actividad, en formato "YYYY-MM-DD HH:MI"
  alias date=gdate
  echo Ejemplo: `date +"%Y-%m-%d 19:00"`
  ## se debe ingresar la fecha sin comillas, ni simples no dobles para que funcione la validacion
  while (true); do
  fecha
  a=$(echo $?)
  echo $a
  if [  $a -eq 0 ]; then 
	  echo fecha buena
	  break
  else 
	  echo fecha mala
  fi 
  echo $?
  done
  ########
  echo Indique si requiere que la instancia de Jboss en $server sea reiniciada una vez se instale las aplicaciones $list_wars
  echo el default/omision es No, Digite 0 para NO y 1 para SI.
  read rein
  ########
  echo generando plantilla para $server... un momento...
  sleep 3
  echo at_datetime: '"'$fecha_hora'"' >$PROJECT_HOME/var_jboss_"$CR"_"$server".txt
  echo cambio: $CR >>$PROJECT_HOME/var_jboss_"$CR"_"$server".txt
  echo servidor: $server >>$PROJECT_HOME/var_jboss_"$CR"_"$server".txt
  echo apps: '"'$list_wars'"' >>$PROJECT_HOME/var_jboss_"$CR"_"$server".txt
  echo reinicio: $rein >>$PROJECT_HOME/var_jboss_"$CR"_"$server".txt
  echo emails: '"'$email'"' >>$PROJECT_HOME/var_jboss_"$CR"_"$server".txt
  cat $PROJECT_HOME/deploy_jboss/vars/var_temp.txt > $PROJECT_HOME/deploy_jboss/vars/main.yml
  cat $PROJECT_HOME/var_jboss_"$CR"_"$server".txt >> $PROJECT_HOME/deploy_jboss/vars/main.yml
  mv $PROJECT_HOME/var_jboss_"$CR"_"$server".txt $PROJECT_HOME/historico/
  cd $PROJECT_HOME
 # echo esta linea ejecutara..
  ##ansible-playbook --limit=$server  deploy-jboss.yml --extra-vars "cambio=$CR apps=$list_wars servidor=$server reinicio=$rein at_datetime=$at_tiempo"
   ########

   clear
   echo ===RESUMEN DE PROGRAMACION PARA EL $cambio en $server ES LA SIGUIENTE:
   cat $PROJECT_HOME/historico/var_jboss_"$CR"_*.txt $PROJECT_HOME/historico/cancelado_"$CR".txt
   echo
   echo Desea continuar con la programación...? digite 1 para continuar y 0 o cualquier tecla  para cancelar la programacion.
   read nexts
   echo usted ha digitado $nexts..
   if [ $nexts == 1 ]; then
      echo Inicia preparacion y envio de programación y ejecucion a $server...
      ansible-playbook --limit=$server  deploy-jboss.yml 
      echo identificando job en caso de cancelar cambio.
      ansible $server --command at -l|grep $fecha_hora
      sleep 10
   else
      echo cancelada la programación del cambio..
      echo "***CAMBIO CANCELADO en $server *****"  >> $PROJECT_HOME/historico/var_jboss_"$CR"_"$server".txt
      mv $PROJECT_HOME/historico/var_jboss_"$CR"_"$server".txt  $PROJECT_HOME/historico/cancelado_"$CR".txt
      break 1
   fi
done
clear
echo ===RESUMEN DE PROGRAMACION PARA EL $cambio ES LA SIGUIENTE:
cat $PROJECT_HOME/historico/var_jboss_"$CR"_*.txt $PROJECT_HOME/historico/cancelado_"$CR".txt
echo Digite cualquier tecla  para  continuar..
read pro
}

#===============Menu principal==
while [ $prog  -eq 1 ]; do
#PS3="Elige tu opción: "
opciones=(			 "Deploy_jboss" "Deploy_micros" "Deploy_docker" "Deploy_tomcat" "Reinicios" "CheckList" "Reportes" "Salir" )
PS3="				 Elige una opción:  ó ENTER para continuar.."
select opt in "${opciones[@]}"
do
    case $opt in 

        "Deploy_jboss") echo "Has elegido Programar  un  cambio en jboss para redesplegar applicaciones!!!! " 
  		     echo Vamos a Ingresar la información minima necsaria para poder hacer esta tarea.
         	     echo Indique el  numero de cambio:
  		     echo Por ejemplo: CR9999
 		     read cambio
		     clear
		     echo   
                     echo Vamos a Indicar la lista de correos a los cuales notificaremos el resultado de este cambio.
     		     echo Escriba los buzones de correo en una misma linea separados por un espacio:
		     read email
		     echo
  		     echo Seleccione de la Lista de  servidores de Jboss a desplegar:
		     echo ===========servidores Disponibles=====

		     servidores=""
		     echo   "SERVIDORES DE JBOSS DISPONIBLES"
		     opciones=(`cat hosts.cfg|grep servicios|awk 'BEGIN{FS=" "} { print $1 }'` Continuar)
		     PS3="				 Elige una opción:   Para continuar.."
		     select opt in "${opciones[@]}"
		     do
    		       for i in "${opciones[($REPLY-1)]}"; do
      		       #echo el valor de REPLY es: $REPLY y "${opciones[($REPLY-1)]}"
    		       if [ $REPLY  ]; then
       			  #echo valor de REPLY es: $REPLY y de i es: $i
       	 	       if [ "$i" != "Continuar" ]; then
          		  #echo "REPLY es: $REPLY" y de i es $i
          		  #servidores="$servidores $i"
          		  servidores=""$servidores" "${opciones[($REPLY-1)]}""
          		  echo Servidores selecionados son: $servidores
                       else
          		  echo Servidores selecionados son: $servidores
			  if   [ "$servidores" == "" ]; then
				  echo NO HA SELECCIONADO NINGUN SERVIDOR!!!. DEBE SELECCIONAR ALMENOS UNO.
				  sleep 2
				  break
	                  fi
 			  sleep 2
                          break 2
       	 	       fi
    		       fi
    		       done
	 	     done
		     clear
		   echo   "SERVIDORES SELECCIONADOS PARA ESTE CAMBIO:"
		   echo - $servidores
   		   deploy "$cambio" "$servidores"
		   clear
        ;;

        "Deploy_micros") echo "Has elegido deploy_micros" 
                date; 
        ;;

        "Deploy_docker") echo "Has elegido deploy_docker "
                date; 
        ;;

        "Otros") echo "Has elegido gestionar Otras opciones"
                date;
        ;;
        "Salir") break 2
      
        ;;
        *) echo "Opcion no válida."
    esac
done
prog=0
done
